!function(){"use strict";angular.module("ahdin",[])}(),function(){"use strict";function t(t,o,n,a,i,e){function r(o){function r(t){u(function(n){a(o.sourceFile,t,n)})}function u(t){a.parseMetaData(o.sourceFile,function(n){var a={canvas:!0,maxWidth:o.maxWidth,maxHeight:o.maxHeight};n.exif&&(a.orientation=n.exif.get("Orientation")),t(a)})}function m(t){s(t,l)}function s(t,n){var a="image/"+o.outputFormat,e=t.toDataURL(a,o.quality);i.dataURLToBlob(e).then(f).then(n)}function f(t){return t.name=o.sourceFile.name,t}function l(t){function o(){d.resolve(t)}n.$apply(o)}c(o),o.quality=o.quality||e,o.outputFormat=o.outputFormat||"jpeg";var d=t.defer();return r(m),d.promise}function u(t){return angular.isNumber(t)&&t>0}function c(t){t=t||{},m(t.sourceFile),s(t.maxWidth),f(t.maxHeight),l(t.outputFormat),d(t.quality)}function m(t){var n=t instanceof o.File||t instanceof o.Blob;if(!n)throw new Error("params.sourceFile must be instance of File")}function s(t){var o=void 0===t||u(t);if(!o)throw new Error("params.maxWidth must be a positive Number")}function f(t){var o=void 0===t||u(t);if(!o)throw new Error("params.maxHeight must be a positive Number")}function l(t){var o=p.indexOf(t)>-1,n=t?o:!0;if(!n)throw new Error("params.outputFormat format must be one of ["+p+"]")}function d(t){var o=void 0===t||t>0&&1>=t;if(!o)throw new Error("params.quality must be a Number over 0 and less or equal to 1")}var p=["jpeg","png"];return{compress:r}}angular.module("ahdin").factory("Ahdin",t),t.$inject=["$q","$window","$rootScope","loadImage","blobUtil","QUALITY"]}(),function(){"use strict";angular.module("ahdin").constant("blobUtil",blobUtil).constant("loadImage",loadImage).constant("QUALITY",.8)}();